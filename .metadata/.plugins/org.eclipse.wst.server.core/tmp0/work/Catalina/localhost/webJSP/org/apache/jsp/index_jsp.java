/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-07-21 05:14:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Calendar;
import java.io.FileReader;
import java.util.Scanner;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

 // 선언부
	// 메소드나 변수를 선언하는 영역
	public String gugudan(int dan){
		String tag = "<ul>";
		for(int i=2; i<=9; i++){
			tag += "<li>"+dan+"*"+i+"="+(dan*i)+"</li>";
		}
		tag +="</ul>";
		return tag;
	}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/jsp06_include/topMenu.jspf", Long.valueOf(1658369474058L));
    _jspx_dependants.put("/jsp06_include/bottomInc.jspf", Long.valueOf(1658364103485L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("java.util.Scanner");
    _jspx_imports_classes.add("java.io.FileReader");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("	#menu{\r\n");
      out.write("		height:100px; background-color:yellow;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"menu\"></div>\r\n");
      out.write("<!-- 지시부 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("	header{height:100px; background:lime; color:#fff; line-height:100px; text-align:center; font-size:4em;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>멀캠 홈페이지</header>\r\n");
      out.write("<!-- jsp04_session과 같이 볼 것 -->\r\n");
 if(session.getAttribute("logStatus")!=null && session.getAttribute("logStatus").equals("Y")){ // 로그인된 경우 
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.print(session.getAttribute("logName") );
      out.write("<a href=\"/webJSP/jsp04_session/sessionLogout.jsp\">로그아웃</a>\r\n");
 }else{ // 로그인 안된경우 
      out.write("\r\n");
      out.write("	<a href=\"");
      out.print(request.getContextPath());
      out.write("/jsp02_response/login.jsp\">로그인</a>\r\n");
} 
      out.write("\r\n");
      out.write("<h2>");
      out.print(session.getId() );
      out.write("</h2>\r\n");
      out.write("<hr/>\r\n");
      out.write("	<h2>jstl(jsp standard tag library)</h2>\r\n");
      out.write("	<div>\r\n");
      out.write("		<p style=\"background-color=#ddd\">\r\n");
      out.write("		https://tomcat.apache.org/taglibs/standard에서 다운로드\r\n");
      out.write("		jakarta-taglibs-standard-1.1.2.zip 다운로드\r\n");
      out.write("		이클립스의 WEB-INF/lib폴더에 jstl.jar, standard.jar를 복사한다.\r\n");
      out.write("		</p>\r\n");
      out.write("		<ol>\r\n");
      out.write("			<li><a href=\"/webJSP/jsp07_jstl/setTag.jsp\">set Tag : 변수를 선언하고 삭제하는 방법</a></li>\r\n");
      out.write("			<li><a href=\"/webJSP/jsp07_jstl/ifTag.jsp?name=이순신&age=500&tel=010-1234-5678\">if Tag : 조건문</a>\r\n");
      out.write("			<li><a href=\"/webJSP/jsp07_jstl/forEach.jsp\">forEach Tag : 반복문</a>\r\n");
      out.write("			<li><a href=\"/webJSP/jsp07_jstl/url.jsp\">url Tag</a></li>\r\n");
      out.write("			<li><a href=\"/webJSP/jsp07_jstl/choose.jsp?name=hong&age=25\">choose Tag : 조건문</a></li>\r\n");
      out.write("			<li><a href=\"/webJSP/jsp07_jstl/redirect.jsp\">redirect Tag : 자동페이지 이동</a></li>\r\n");
      out.write("		</ol>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("<hr/>\r\n");
      out.write("<div>\r\n");

	// 스크립트릿 : 명령어 입력하는 곳
	int a = 100;
	String name = "홍길동";
	int c = a / 3;
	
	Calendar now = Calendar.getInstance();
	System.out.println("c="+c);
	
	// 내장 객체 : request, response, session, out, application, cookie
	
	out.print("c="+c);


      out.write("\r\n");
      out.write("<hr/>\r\n");

	out.print("<h1>jsp에서 클라이언트에게 보낸 데이터</h1>");

	out.print(gugudan(7));

      out.write("\r\n");
      out.write("<hr/>\r\n");
      out.write("a=");
      out.print(a+15);
      out.write("<br/>\r\n");
      out.write("name=");
      out.print(name );
      out.write("<br/>\r\n");
      out.write("c=");
      out.print(c );
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("	#bottomInc{\r\n");
      out.write("		height:50px; background-color:blue;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("<div id=\"bottomInc\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
